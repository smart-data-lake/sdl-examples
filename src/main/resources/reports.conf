#
# Smart Data Lake - Build your data lake the smart way.
#
# Copyright Â© 2019 ELCA Informatique SA (<https://www.elca.ch>)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#

dataObjects {

  // export metadata
  applications-conf-do {
    type = DataObjectsExporterDataObject
  }

  applications-conf-actions {
    type = ActionsExporterDataObject
  }

  export-data-objects {
    type=CsvFileDataObject
    path = "metadata-data-objects.csv"
    csv-options {
      delimiter = ","
      escape = "\\"
      header = "true"
      quote = "\""
    }
  }

  export-actions {
    type=CsvFileDataObject
    path = "metadata-actions.csv"
    csv-options {
      delimiter = ","
      escape = "\\"
      header = "true"
      quote = "\""
    }
  }

  // report primary key violations
  check-primary-keys {
    type = PKViolatorsDataObject
    flatten-output = true
  }

  export-primary-key-violations {
    type = CsvFileDataObject
    path = "pk-violations.csv"
    csv-options {
      delimiter = ","
      escape = "\\"
      header = "true"
      quote = "\""
    }
  }
}

actions {

  // export metadata
  export-data-objects {
    type = CopyAction
    inputId = applications-conf-do
    outputId = export-data-objects
    metadata {
      feed = export-metadata
    }
  }

  export-actions {
    type = CopyAction
    inputId = applications-conf-actions
    outputId = export-actions
    metadata {
      feed = export-metadata
    }
  }

  // report primary key violations
  check-primary-keys {
    type = CopyAction
    inputId = check-primary-keys
    outputId = export-primary-key-violations
    metadata {
      feed = check-constraints
    }
  }
}